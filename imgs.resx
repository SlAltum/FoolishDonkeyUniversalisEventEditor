<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CelestialEmporerCrown.png" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>